{"version":3,"sources":["components/AccountBalance.js","components/NavBar.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Debit.js","components/Credit.js","App.js","serviceWorker.js","index.js"],"names":["AccountBalance","className","this","props","accountBalance","Component","Navbar","to","Home","src","alt","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debit","updateItem","item","date","Date","toLocaleString","updateDebit","id","description","amount","rows","debitData","map","index","push","key","Description","Amount","Credit","updateCredit","creditData","App","calculateTotal","amounts","parseFloat","reduce","acc","now","calculateBalance","balance","creditTotal","debitTotal","toFixed","ob","data","total","logInInfo","newUser","currentUser","getData","bind","axios","get","debit","credit","c","d","exact","path","render","setTotal","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0dd2bb55.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"Account_Balance\">\r\n                Account Balance: {this.props.accountBalance}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountBalance;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport \"../css/NavBar.css\"\r\n\r\n\r\nclass Navbar extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"nav-bar\">\r\n                <Link className=\"link\" to='/'>Home</Link>\r\n                <Link className=\"link\" to=\"/userProfile\">User Profile</Link>\r\n                <Link className=\"link\" to=\"/login\">Login</Link>\r\n                <Link className=\"link\" to=\"/Debit\">Debit</Link>\r\n                <Link className=\"link\" to=\"/Credit\">Credit</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\n\r\n\r\nimport AccountBalance from './AccountBalance';\r\nimport NavBar from './NavBar';\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"Home\">\r\n                <NavBar/>\r\n                <img src=\"https://letstalkpayments.com/wp-content/uploads/2016/04/Bank.png\" alt='bank'/>\r\n                <h1>\r\n                    Bank of React\r\n                </h1>\r\n\r\n                <AccountBalance accountBalance={this.props.accountBalance}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from  'react';\r\n\r\n\r\nimport NavBar from './NavBar';\r\n\r\nclass UserProfile extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <NavBar/>\r\n                <h1>\r\n                    User Profile\r\n                </h1>\r\n                <div>\r\n                    Username: {this.props.userName}\r\n                </div>\r\n                <div>\r\n                    Member Since: {this.props.memberSince}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfile;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport NavBar from './NavBar';\r\n\r\n\r\nclass LogIn extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      user: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}\r\n    const inputField = e.target.name\r\n    const inputValue = e.target.value\r\n    updatedUser[inputField] = inputValue\r\n\r\n    this.setState({user: updatedUser})\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)\r\n    this.setState({redirect: true})\r\n  }\r\n\r\n  render () {\r\n    if (this.state.redirect) {\r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n    return (\r\n      <div className=\"Login\">\r\n        <NavBar />\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"userName\">User Name</label>\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn","import React, {Component} from 'react';\r\n\r\nimport Navbar from './NavBar';\r\nimport AccountBalance from './AccountBalance'\r\n\r\n\r\n\r\nclass Debit extends Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            item:{\r\n                id: \"\",\r\n                description: \"\",\r\n                amount: \"\",\r\n                date: \"\",\r\n            },\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const updateItem = {...this.state.item};\r\n        const inputField = e.target.name;\r\n        const inputValue = e.target.value;\r\n        var date = new Date().toLocaleString();\r\n        \r\n        updateItem[inputField] = inputValue;\r\n        updateItem.date = date;\r\n        this.setState({item: updateItem});\r\n        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.updateDebit(this.state.item);\r\n       \r\n    };\r\n\r\n    render(){\r\n        const rows =[];\r\n        this.props.debitData.map((item, index) => {\r\n            rows.push(\r\n                <ul key={index}>\r\n                    <li>\r\n                        Description: {item.description}\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Amount: {item.amount}\r\n                        </li>\r\n                        <li>\r\n                            Date: {item.date}\r\n                        </li>\r\n                    </ul>\r\n                </ul>\r\n            )\r\n        });\r\n        \r\n\r\n        return(\r\n            <div className=\"Transactions\">\r\n                <Navbar/>\r\n                <h1>\r\n                    Debits\r\n                </h1>\r\n                {rows}\r\n                <AccountBalance accountBalance={this.props.accountBalance}/>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"description\">Description: </label>\r\n                    <input type=\"text\" name=\"description\" onChange={this.handleChange} value={this.state.item.Description} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"amount\">Amount: </label>\r\n                    <input type=\"number\" name=\"amount\" onChange={this.handleChange} value={this.state.item.Amount} />\r\n                </div>\r\n                <button>Add Debit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Debit;","import React, {Component} from 'react';\r\n\r\nimport Navbar from './NavBar';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nclass Credit extends Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            item:{\r\n                id: \"\",\r\n                description: \"\",\r\n                amount: \"\",\r\n                date: \"\",\r\n            },\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const updateItem = {...this.state.item};\r\n        const inputField = e.target.name;\r\n        const inputValue = e.target.value;\r\n        var date = new Date().toLocaleString();\r\n        \r\n        updateItem[inputField] = inputValue;\r\n        updateItem.date = date;\r\n        this.setState({item: updateItem});\r\n        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.updateCredit(this.state.item);\r\n       \r\n    };\r\n\r\n    render(){\r\n        const rows =[];\r\n        this.props.creditData.map((item, index) => {\r\n            rows.push(\r\n                <ul key={index}>\r\n                    <li>\r\n                        Description: {item.description}\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Amount: {item.amount}\r\n                        </li>\r\n                        <li>\r\n                            Date: {item.date}\r\n                        </li>\r\n                    </ul>\r\n                </ul>\r\n            )\r\n        });\r\n        \r\n\r\n        return(\r\n            <div className=\"Transactions\">\r\n                \r\n                <Navbar/>\r\n                \r\n                <h1>\r\n                    Credits\r\n                </h1>\r\n\r\n                {rows}\r\n                \r\n                <AccountBalance accountBalance={this.props.accountBalance}/>\r\n                \r\n                <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"description\">Description: </label>\r\n                    <input type=\"text\" name=\"description\" onChange={this.handleChange} value={this.state.item.Description} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"amount\">Amount: </label>\r\n                    <input type=\"number\" name=\"amount\" onChange={this.handleChange} value={this.state.item.Amount} />\r\n                </div>\r\n                <button>Add Credit</button>\r\n                </form>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Credit;","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport axios from 'axios';\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Debit from './components/Debit';\nimport Credit from './components/Credit';\n\nimport './css/App.css'\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      accountBalance: 0,\n      currentUser: {\n        userName: 'bob_loblaw',\n        memberSince: '09/23/99',\n      },\n\n      debitData: [],\n      creditData: [],\n      debitTotal: 0,\n      creditTotal: 0,\n    }\n\n    this.getData = this.getData.bind(this);\n    \n  }\n\n  calculateTotal = (amounts) => {\n    let a = amounts.map(item => parseFloat(item.amount));\n    let total = a.reduce((acc,now) => {\n      acc += now;\n      return acc;\n    }, 0)\n    \n    return total;\n  }\n\n  \n\n  calculateBalance= () => {\n    let balance = (this.state.creditTotal - this.state.debitTotal).toFixed(2);\n    this.setState({accountBalance: balance})\n    \n  }\n\n\n  updateDebit = (ob) => {\n    const data = [...this.state.debitData]\n    data.push(ob);\n    let total = this.calculateTotal(data);\n    this.setState({ debitData: data, debitTotal: total }, function() {this.calculateBalance();})\n    \n  }\n\n  updateCredit = (ob) => {\n    const data = [...this.state.creditData]\n    data.push(ob);\n    let total = this.calculateTotal(data);\n    this.setState({ creditData: data, creditTotal: total }, function() {this.calculateBalance();})\n    \n  }\n\n  async getData(){\n    let debit = await axios.get(\"https://moj-api.herokuapp.com/debits\");\n    let credit = await axios.get(\"https://moj-api.herokuapp.com/credits\");\n    let c = this.calculateTotal(credit.data);\n    let d = this.calculateTotal(debit.data);\n\n    this.setState({\n      creditData: credit.data, \n      debitData: debit.data,\n      creditTotal: c,\n      debitTotal: d,\n      accountBalance: (c - d).toFixed(2),\n    });\n    \n  }\n\n  mockLogIn = (logInInfo) => {\n    \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n\n  componentDidMount(){\n    this.getData();\n    \n  }\n  \n\n\n  render(){\n    \n    const HomeComponent = () => (\n      <Home accountBalance={this.state.accountBalance} />\n    );\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    );\n    const LogInComponent = () => (\n      <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} {...this.props}/>\n    );\n    const DebitComponent = () => (\n      <Debit debitData={this.state.debitData} accountBalance={this.state.accountBalance} updateDebit={this.updateDebit} setTotal={this.setTotal} calculateBalance={this.calculateBalance}/>\n    );\n\n    const CreditComponent = () => (\n      <Credit creditData={this.state.creditData} accountBalance={this.state.accountBalance} updateCredit={this.updateCredit} setTotal={this.setTotal} calculateBalance={this.calculateBalance}/>\n    );\n\n    return(\n      <Router>\n        <Switch>\n          <Route exact path='/' render={HomeComponent}/>\n          <Route exact path='/userProfile' render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/Debit\" render={DebitComponent}/>\n          <Route exact path=\"/Credit\" render={CreditComponent}/>\n        </Switch>\n      </Router>\n      \n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}